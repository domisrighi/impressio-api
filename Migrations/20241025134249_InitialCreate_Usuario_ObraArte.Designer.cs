// <auto-generated />
using System;
using ImpressioApi_.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ImpressioApi_.Migrations
{
    [DbContext(typeof(ImpressioDbContext))]
    [Migration("20241025134249_InitialCreate_Usuario_ObraArte")]
    partial class InitialCreate_Usuario_ObraArte
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ImpressioApi_.Domain.Model.ObraArte", b =>
                {
                    b.Property<int>("IdObraArte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_obra_arte");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdObraArte"));

                    b.Property<string>("DescricaoObraArte")
                        .HasMaxLength(170)
                        .HasColumnType("character varying(170)")
                        .HasColumnName("descricao_obra_arte");

                    b.Property<int?>("Downvote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("downvote");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    b.Property<string>("ImagemObraArte")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("imagem_obra_arte");

                    b.Property<bool>("Publico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("publico");

                    b.Property<int?>("Upvote")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("upvote");

                    b.HasKey("IdObraArte")
                        .HasName("pk_obra_arte");

                    b.HasIndex("IdUsuario");

                    b.ToTable("t_obra_arte", (string)null);
                });

            modelBuilder.Entity("ImpressioApi_.Domain.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apelido")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("apelido");

                    b.Property<string>("BiografiaUsuario")
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("biografia_usuario");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email_usuario");

                    b.Property<string>("ImagemUsuario")
                        .HasColumnType("text")
                        .HasColumnName("imagem_usuario");

                    b.Property<string>("NomeUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("nome_usuario");

                    b.Property<bool>("Publico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("publico");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario")
                        .HasName("pk_usuario");

                    b.ToTable("t_usuario", (string)null);
                });

            modelBuilder.Entity("ImpressioApi_.Domain.Model.ObraArte", b =>
                {
                    b.HasOne("ImpressioApi_.Domain.Model.Usuario", "Usuario")
                        .WithMany("ObrasArte")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usuario_obras_arte");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ImpressioApi_.Domain.Model.Usuario", b =>
                {
                    b.Navigation("ObrasArte");
                });
#pragma warning restore 612, 618
        }
    }
}
